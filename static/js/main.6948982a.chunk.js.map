{"version":3,"sources":["logo.svg","App.js","Components/ToDoItem.js","Components/todosData.js","Components/ToDoApp.js","Components/JokeMain.js","Components/MemeGenerator.js","Components/MemeHeader.js","Components/MemeGeneratorApp.js","index.js"],"names":["React","Component","ToDoItem","props","className","type","onChange","handleChange","item","id","text","todosData","completed","JokeMain","MemeGenerator","state","toptext","bottomtext","image","allMemeImgs","bind","handleSubmit","console","log","fetch","then","response","json","memes","data","setState","event","this","target","name","value","preventDefault","randNum","Math","floor","random","length","randomMemImg","url","onSubmit","src","alt","MemeHeader","MemeGeneratorApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAAe,I,OCiCGA,IAAMC,U,MCtBTC,MATf,SAAkBC,GACd,OACI,sBAAKC,UAAU,YAAf,UACI,uBAAOC,KAAM,WAAWC,SAAW,kBAAMH,EAAMI,aAAaJ,EAAMK,KAAKC,OACvE,4BAAIN,EAAMK,KAAKE,WCsBZC,EA5BG,CACd,CACIF,GAAI,EACJC,KAAM,qBACNE,WAAW,GAEf,CACIH,GAAI,EACJC,KAAM,mBACNE,WAAW,GAEf,CACIH,GAAI,EACJC,KAAM,mBACNE,WAAW,GAEf,CACIH,GAAI,EACJC,KAAM,WACNE,WAAW,GAEf,CACIH,GAAI,EACJC,KAAM,mCACNE,WAAW,ICRGZ,IAAMC,U,OCEbY,IC4CAC,E,kDAzDX,aAAc,IAAD,8BACT,gBACKC,MAAO,CACRC,QAAS,GACTC,WAAY,GACZC,MAAQ,gCACRC,YAAa,IAEjB,EAAKZ,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATX,E,gEAYO,IAAD,OACfE,QAAQC,IAAI,YACZC,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACRE,EAASF,EAASG,KAAlBD,MACPN,QAAQC,IAAIK,EAAM,IAClB,EAAKE,SAAS,CAAEX,YAAaS,S,mCAG5BG,GACTT,QAAQC,IAAI,gBACZS,KAAKF,SAAL,eAAgBC,EAAME,OAAOC,KAAQH,EAAME,OAAOE,U,mCAEzCJ,GACTA,EAAMK,iBAEN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWR,KAAKjB,MAAMI,YAAYsB,QAC5DC,EAAeV,KAAKjB,MAAMI,YAAYkB,GAASM,IACrDX,KAAKF,SAAS,CACVZ,MAAQwB,M,+BAIZ,OACD,gCACI,uBAAMtC,UAAU,YAAYwC,SAAUZ,KAAKX,aAA3C,UACI,uBAAOhB,KAAK,OAAO6B,KAAK,UAAUC,MAAQH,KAAKjB,MAAMC,QAASV,SAAW0B,KAAKzB,eAC9E,uBACA,uBAAOF,KAAK,OAAO6B,KAAK,aAAaC,MAAQH,KAAKjB,MAAME,WAAYX,SAAW0B,KAAKzB,eACpF,uBACA,yCACA,0BAEJ,sBAAKH,UAAU,OAAf,UACK,qBAAKyC,IAAMb,KAAKjB,MAAMG,MAAO4B,IAAI,KACjC,oBAAK1C,UAAU,MAAf,SAAsB4B,KAAKjB,MAAMC,UACjC,oBAAKZ,UAAU,SAAf,SAAyB4B,KAAKjB,MAAME,uB,GAlDxBjB,IAAMC,WCYnB8C,E,uKAXP,OACA,uCAAS,qBACTF,IAAI,iEACJC,IAAI,oB,GALa9C,IAAMC,WCchB+C,E,uKAVP,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GANehD,IAAMC,WCkBrCgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6948982a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\"\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nfunction clicked(){\n  console.log(\"I am clicked\")\n}\n\nfunction mouseOver(){\n  console.log(\"hovering the mouse\")\n}\n\nclass App extends React.Component\n{\n  constructor(){\n    super()\n    this.state ={\n      firstName : \"\",\n      lastName :\"\",\n      isFriendly :false,\n      age :\"\",\n      gender :\"\",\n      favColor :\"\"\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  // componentDidMount(){\n  //   fetch(\"https://swapi.co/api/people/1\")\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log(data)\n  //       this.setState({\n  //         count : data\n  //       })\n  //     })\n  // }\n  handleClick()\n  {\n    //this.state.count++ // we cannot change the state directly , it gives an error\n    this.setState(prevState =>{ // here prevState is the previous state of the page\n      return{\n        count : prevState.count +1\n      }\n    }\n    )\n  }\n  // render()\n  // {\n  //   return (\n  //     <div>\n  //       <h1>{this.state.count}</h1>\n  //       <button >CLick me to change the count</button>\n  //     </div>\n  //   )\n  // }\n  handleChange(event){\n    event.target.type === \"checkbox\" ? \n      this.setState({[event.target.name] : event.target.checked})\n    : this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit(event)\n  {\n    event.preventDefault();\n    console.log(\"submitted the form\")\n    var age = this.state.age\n    if(!Number(age))\n    {\n      alert(\"age must be a number\")\n    }\n  }\n\n\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" value = {this.state.firstName} name=\"firstName\" placeholder=\"First Name\" onChange={this.handleChange} />\n          <br />\n          <input type=\"text\" value = {this.state.lastName} name=\"lastName\" placeholder=\"Last Name\" onChange={this.handleChange} />\n          <br />\n          <input type=\"text\" value = {this.state.age} name=\"age\" placeholder=\"Age\" onChange={this.handleChange} />\n          {/* <h1>{this.state.firstName} {this.state.lastName}</h1> */}\n          <br />\n          <textarea placeholder=\"some default text\" />\n          <br />\n          <input type=\"checkbox\" \n            name =\"isFriendly\"\n            onChange ={this.handleChange}\n          />Is isFriendly?\n          <br />\n          <label>\n            <input\n              type =\"radio\"\n              name = \"gender\"\n              value = \"male\"\n              checked = {this.state.gender === \"male\"}\n              onChange ={this.handleChange}\n             /> Male\n            \n          </label>\n          <br />\n          <label>\n          <input\n              type =\"radio\"\n              name = \"gender\"\n              value = \"female\"\n              checked = {this.state.gender === \"female\"}\n              onChange ={this.handleChange}\n             /> Female\n          </label>\n          <br />\n          <label>Favourite Color</label>\n          <select value={this.state.favColor} onChange ={this.handleChange}\n          name =\"favColor\">\n            <option value =\"blue\">Blue</option>\n            <option value =\"green\">Green</option>\n            <option value =\"red\">Red</option>\n          </select>\n          <h2> your fav color is {this.state.favColor}</h2>\n\n          <button>Submit</button>\n        </form>\n        <hr />\n        <h3>Entered Information</h3>\n        <p>YOur name : {this.state.firstName} {this.state.lastName}</p>\n        <p> your gender : {this.state.gender}</p>\n        <p> your fav color : {this.state.favColor}</p>\n        \n      </div>\n    )\n  }\n\n\n}\n\nexport default App;\n","import React from \"react\"\r\n\r\nfunction ToDoItem(props){\r\n    return(\r\n        <div className=\"todo-item\">\r\n            <input type =\"checkbox\" onChange ={() => props.handleChange(props.item.id)}/>\r\n            <p>{props.item.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoItem","const todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Take out the trash\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Grocery shopping\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Clean gecko tank\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Mow lawn\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Catch up on Arrested Development\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","import React from \"react\"\r\n\r\nimport ReactDOM from \"react-dom\"\r\nimport ToDoItem from \"./ToDoItem\"\r\nimport todosData from \"./todosData\"\r\n\r\n// function ToDoApp(){\r\n//     const todoComponents = todosData.map((item) => <ToDoItem key={item.id} item={item}/>)\r\n//     return(\r\n//         <div className=\"todo-list\">\r\n//             {todoComponents}\r\n//         </div>\r\n//     );\r\n\r\n// }\r\n\r\nclass ToDoApp extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            todos: todosData\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(id)\r\n    {\r\n        console.log(\"cliekd the checkbox \"+id)\r\n        this.setState(prevState =>{\r\n            const upDatedTodos = prevState.todos.map(todo =>{\r\n                if(todo.id === id)\r\n                {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            })\r\n            return {\r\n                todos : upDatedTodos\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        const todoComponents = this.state.todos.map((item) => <ToDoItem key={item.id} item={item} \r\n        handleChange = {this.handleChange}/>)\r\n        return(\r\n            <div className=\"todo-list\">\r\n                {todoComponents}\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ToDoApp","import React from \"react\"\r\n\r\nimport Joke from \"./Joke\"\r\nimport jokesData from \"./jokesData\"\r\nfunction JokeMain(){\r\n    // we can map the components of jokesdata (array of jokes ), instead of passing each argument\r\n\r\n    const jokeComponent = jokesData.map(function(joke) {\r\n        return <Joke key = {joke.id} question = {joke.question} punchLine ={joke.punchLine} />\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {jokeComponent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JokeMain","import React from \"react\"\r\n\r\nimport \"./style.css\"\r\n\r\nclass MemeGenerator extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            toptext :\"\",\r\n            bottomtext :\"\",\r\n            image : \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"in mount\")\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n                console.log(memes[0])\r\n                this.setState({ allMemeImgs: memes })\r\n            })\r\n    }\r\n    handleChange(event){\r\n        console.log(\"text changed\")\r\n        this.setState({[event.target.name] : event.target.value})\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const randomMemImg = this.state.allMemeImgs[randNum].url\r\n        this.setState({\r\n            image : randomMemImg\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n       <div>\r\n           <form className=\"meme-from\" onSubmit={this.handleSubmit}>\r\n               <input type=\"text\" name=\"toptext\" value ={this.state.toptext} onChange ={this.handleChange} />\r\n               <br />\r\n               <input type=\"text\" name=\"bottomtext\" value ={this.state.bottomtext} onChange ={this.handleChange} />\r\n               <br />\r\n               <button>Gen</button>\r\n               <br />\r\n           </form>\r\n           <div className=\"meme\">\r\n                <img src ={this.state.image} alt=\"\" />\r\n                <h2  className=\"top\">{this.state.toptext}</h2>\r\n                <h2  className=\"bottom\">{this.state.bottomtext}</h2>\r\n           </div>\r\n       </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from \"react\"\r\n\r\n\r\nclass MemeHeader extends React.Component{\r\n    render(){\r\n        return (\r\n        <header> <img \r\n        src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" \r\n        alt=\"Problem?\"\r\n        />\r\n\r\n    </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeHeader","import React from \"react\"\r\nimport MemeGenerator from \"./MemeGenerator\"\r\nimport MemeHeader from \"./MemeHeader\"\r\n\r\nclass MemeGeneratorApp extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <MemeHeader />\r\n                <MemeGenerator />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MemeGeneratorApp","import React from 'react'; // this is required for JSX\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport MyInfo from \"./Components/MyInfo.js\"\n\nimport ToDoApp from \"./Components/ToDoApp\"\n\nimport ContactList from \"./Components/ContactList\"\n\nimport JokeMain from \"./Components/JokeMain\"\nimport MemeGeneratorApp from './Components/MemeGeneratorApp';\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <ToDoApp />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MemeGeneratorApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}